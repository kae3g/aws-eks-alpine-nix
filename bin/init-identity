#!/bin/sh
# Initialize b122m faeb identity for this repository
set -e

echo "🔑 Initializing b122m faeb identity..."
echo "💙 This establishes your cryptographic foundation"

# Check for GPG key
if ! gpg --list-keys | grep -q "b122m faeb internet identity"; then
    echo "❌ No GPG key found with 'b122m faeb internet identity'"
    echo "Please generate your identity first:"
    echo "  gpg --full-gen-key"
    echo "  Choose: (9) ECC, (1) Curve 25519, 0 = no expiration"
    echo "  Identity: 'yourname (b122m faeb internet identity) <your-email@gmail.com>'"
    exit 1
fi

# Configure git for this repository
if [ -d .git ]; then
    git config user.name "$(git config --global user.name)"
    git config user.email "$(git config --global user.email)"
    git config user.signingkey "$(git config --global user.signingkey)"
    echo "✅ Git identity configured for repository"
else
    echo "⚠️  Not a git repository, skipping git config"
fi

# Create identity directory
mkdir -p identity
cd identity

# Export public keys
gpg --armor --export > gpg-public-key.asc
gpg --export-ssh-key > ssh-public-key.pub

# Create identity manifest
cat > README.md << EOF
# b122m faeb Internet Identity
## Generated: $(date)
## Repository: $(basename $(git rev-parse --show-toplevel 2>/dev/null || pwd))

## Public Keys
- **GPG**: \`$(gpg --fingerprint | grep fingerprint | head -n1 | awk '{print $NF}')\`
- **SSH**: \$(cat ssh-public-key.pub)

## Verification
All commits in this repository should be signed with this GPG key.
To verify: \`git verify-commit HEAD\`

## Philosophy
This identity represents the foundation of our gentle revolution:
- **Sovereign**: Owned entirely by me, not any platform
- **Verifiable**: Cryptographically provable across systems
- **Minimal**: Simple keys without unnecessary complexity
- **Declarative**: Managed through version-controlled configuration

## Associated Accounts
- GitHub: https://github.com/$(git config user.name)
- Email: $(git config user.email)

## Recovery
If this key is compromised:
1. Use revocation certificate to invalidate key
2. Generate new identity with same philosophy
3. Update all systems with new public keys
4. Re-sign critical artifacts with new key
EOF

echo "✅ Identity initialized in ./identity/"
echo "📋 Public keys exported to:"
echo "   - identity/gpg-public-key.asc"
echo "   - identity/ssh-public-key.pub"
echo "   - identity/README.md"
echo "💙 Your sovereign foundation is complete!"
